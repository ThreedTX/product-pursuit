[{"/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/index.js":"1","/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/App.js":"2","/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/store/index.js":"3","/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/store/csrf.js":"4","/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/store/session.js":"5","/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/components/LoginFormPage/index.js":"6"},{"size":814,"mtime":1611627987501,"results":"7","hashOfConfig":"8"},{"size":286,"mtime":1611629585382,"results":"9","hashOfConfig":"8"},{"size":674,"mtime":1611628027368,"results":"10","hashOfConfig":"8"},{"size":1524,"mtime":1611624916754,"results":"11","hashOfConfig":"8"},{"size":1020,"mtime":1611628350934,"results":"12","hashOfConfig":"8"},{"size":1557,"mtime":1611629556547,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jmo15w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/index.js",[],["28","29"],"/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/App.js",[],"/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/store/index.js",[],"/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/store/csrf.js",[],"/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/store/session.js",["30"],"import { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await fetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  dispatch(setUser(response.data.user));\n  return response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n","/mnt/c/Users/reedn/Desktop/authenticate_me/frontend/src/components/LoginFormPage/index.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":13,"column":7,"nodeType":"37","messageId":"38","endLine":13,"endColumn":17},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'removeUser' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]